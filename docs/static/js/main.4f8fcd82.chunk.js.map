{"version":3,"sources":["Components/Autocomplete/index.jsx","Components/StockGraph/index.jsx","Components/StockDetails/index.jsx","HiverStock/index.jsx","utils/helper.js","utils/api.js","utils/apiMiddleware.js","utils/store.js","utils/stockReducer.js","index.js"],"names":["interval","Autocomplete","_ref","onChange","onItemSelect","results","loading","_useState","useState","_useState2","Object","slicedToArray","input","setInput","_useState3","_useState4","show","setShow","useEffect","length","window","clearTimeout","react_default","a","createElement","className","type","placeholder","value","e","fn","delay","target","setTimeout","map","part","idx","key","onClick","item","symbol","tabIndex","name","StockGraph","timeSeries","style","width","height","es6","data","strokeDasharray","dataKey","padding","left","right","tickFormatter","timeStr","moment","Date","format","stroke","StockDetails","stock","Fragment","meta","currency","outputSize","region","information","Components_StockGraph","connect","s","dispatch","search","series","src_Components_Autocomplete","args","src_Components_StockDetails","_keys","keys","getOwnPropertyNames","normalizeObject","obj","nobj","k","replace","x","toLowerCase","normalizeData","ndata","push","_scaleValue","start1","stop1","start2","stop2","normalizeSeriesData","tm","high","parseFloat","low","open","close","objectSpread","time","highMax","lowMin","Infinity","forEach","Math","max","min","formatTimeSeries","BASE_URL","process","searchEndpoint","url","concat","q","createSearchEndpoint","searchCaller","asyncToGenerator","regenerator_default","mark","_callee","query","response","wrap","_context","prev","next","abrupt","payload","fetch","then","r","json","sent","bestMatches","t0","error","message","console","finish","stop","_x","_x2","apply","this","arguments","seriesEndpoint","createSeriesEndpoint","API","_ref2","_callee2","_context2","_x3","_x4","createStore","state","action","composeWithDevTools","applyMiddleware","store","hasOwnProperty","render","es","src_HiverStock","document","getElementById"],"mappings":"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","file":"static/js/main.4f8fcd82.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\nlet interval;\nfunction debounce(fn, delay) {\n  if (interval) {\n    window.clearTimeout(interval);\n  }\n  interval = window.setTimeout(() => {\n    fn();\n  }, delay);\n}\n\nconst Autocomplete = ({ onChange, onItemSelect, results, loading }) => {\n  const [input, setInput] = useState('');\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(results && results.length > 0);\n    return () => {\n      window.clearTimeout(interval);\n    };\n  }, [results]);\n\n  const handleInput = e => {\n    const { value } = e.target;\n    if (typeof onChange === 'function') {\n      debounce(() => onChange(value), 400);\n    }\n    setInput(value);\n  };\n\n  const handleItemSelect = item => {\n    setInput(item.symbol);\n    setShow(false);\n    if (typeof onItemSelect === 'function') {\n      onItemSelect(item);\n    }\n  };\n\n  return (\n    <div className=\"autocomplete\">\n      <input\n        type=\"search\"\n        placeholder=\"Type to search\"\n        value={input}\n        onChange={handleInput}\n      />\n      {loading && (\n        <div className=\"dropdown\">\n          <div className=\"item\">Loading...</div>\n        </div>\n      )}\n      {show && (\n        <div className=\"dropdown\">\n          {results.map((part, idx) => (\n            <div\n              key={idx}\n              className=\"item\"\n              onClick={() => handleItemSelect(part)}\n              tabIndex=\"-1\"\n            >\n              {part.symbol} | {part.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","import React from 'react';\nimport moment from 'moment';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\n/**\n * Source: http://recharts.org/en-US/examples/LineChartWithXAxisPading\n */\nconst StockGraph = ({ timeSeries }) => {\n  return (\n    <div style={{ width: '100%', height: 300 }}>\n      <ResponsiveContainer>\n        <LineChart width={500} height={300} data={timeSeries}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"time\"\n            padding={{ left: 30, right: 30 }}\n            tickFormatter={timeStr => moment(new Date(timeStr)).format('HH:mm')}\n          />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"high\" stroke=\"#8884d8\" />\n          <Line type=\"monotone\" dataKey=\"low\" stroke=\"#dd292a\" />\n          <Line type=\"monotone\" dataKey=\"open\" stroke=\"#2dcc2d\" />\n          <Line type=\"monotone\" dataKey=\"close\" stroke=\"#5e7f83\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default StockGraph;\n","import React from 'react';\nimport StockGraph from '../StockGraph';\nimport './index.scss';\n\nconst StockDetails = ({ stock, loading }) => {\n  if (!stock) {\n    return (\n      <div className=\"card text-center\">\n        Search any stock to see the details\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"stock-details\">\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {stock.meta && (\n            <div className=\"card\">\n              {stock.meta.symbol} | {stock.meta.currency}\n              <div className=\"name\">\n                {stock.meta.name} ({stock.meta.outputSize || stock.meta.region})\n              </div>\n              <div className=\"info\">{stock.meta.information}</div>\n            </div>\n          )}\n          {stock.timeSeries && (\n            <div className=\"card\">\n              <div className=\"card-title\">Stock Price Chart</div>\n              <StockGraph timeSeries={stock.timeSeries} />\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default StockDetails;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Autocomplete from '../Components/Autocomplete';\nimport StockDetails from '../Components/StockDetails';\n\nconst HiverStock = ({ dispatch, loading, search, series }) => {\n  const handleSearch = e =>\n    dispatch({\n      type: 'search',\n      args: e\n    });\n\n  const handleSelect = item =>\n    dispatch({\n      type: 'series',\n      args: item\n    });\n\n  return (\n    <div className=\"container\">\n      <Autocomplete\n        loading={loading}\n        results={search}\n        onChange={handleSearch}\n        onItemSelect={handleSelect}\n      />\n\n      <StockDetails loading={loading} stock={series} />\n    </div>\n  );\n};\n\nexport default connect(s => s)(HiverStock);\n","export const _normalizeKey = key => {\n  const re = /[0-9]./;\n  const rs = /\\s/g;\n  const rc = /[A-Z]/;\n  return key\n    .replace(re, '')\n    .replace(rs, '')\n    .replace(rc, x => x.toLowerCase());\n};\n\nexport const _keys =\n  'keys' in Object ? Object.keys : Object.getOwnPropertyNames;\n\nexport const normalizeObject = obj => {\n  if (!obj) {\n    return obj;\n  }\n  const nobj = {};\n  _keys(obj).map(part => {\n    const k = _normalizeKey(part);\n    nobj[k] = obj[part];\n    return part;\n  });\n  return nobj;\n};\n\nexport const normalizeData = data => {\n  if (!data) {\n    return [];\n  }\n  const ndata = [];\n  data.map(part => {\n    ndata.push(normalizeObject(part));\n    return part;\n  });\n  return ndata;\n};\n\nconst _scaleValue = (value, start1, stop1, start2, stop2) =>\n  ((value - start1) / (stop1 - start1)) * (stop2 - start2) + start2;\n\n/**\n * Just to show more steep in graph I'm scaling the values between 0 to 100;\n */\nconst formatTimeSeries = series => {\n  let highMax = -Infinity;\n  let lowMin = Infinity;\n  series.forEach(part => {\n    highMax = Math.max(part.high, highMax);\n    lowMin = Math.min(part.low, lowMin);\n  });\n  return series.map(part => {\n    // Let's scale the range between 0 to 100;\n    return {\n      high: _scaleValue(part.high, lowMin, highMax, 0, 100),\n      low: _scaleValue(part.low, lowMin, highMax, 0, 100),\n      open: _scaleValue(part.open, lowMin, highMax, 0, 100),\n      close: _scaleValue(part.close, lowMin, highMax, 0, 100),\n      time: part.time\n    };\n  });\n};\n\nexport const normalizeSeriesData = data => {\n  if (!data) {\n    return [];\n  }\n\n  const ndata = [];\n  _keys(data).map(part => {\n    const tm = normalizeObject(data[part]);\n    tm.high = parseFloat(tm.high);\n    tm.low = parseFloat(tm.low);\n    tm.open = parseFloat(tm.open);\n    tm.close = parseFloat(tm.close);\n    ndata.push({\n      ...tm,\n      time: part\n    });\n    return part;\n  });\n  return formatTimeSeries(ndata);\n};\n\nexport const getQueryParams = key => {\n  const { search } = window.location;\n  let value;\n  search\n    .substr(1)\n    .split('&')\n    .forEach(item => {\n      if (item.indexOf(key) > -1) {\n        value = item.split('=')[1];\n      }\n    });\n  return value;\n};\n","import 'whatwg-fetch'; // I could use AXIOS, but Let's use fetch\nimport { normalizeData, normalizeObject, normalizeSeriesData } from './helper';\n\nconst API_KEY = process.env.API_KEY; // ref .env file\nconst BASE_URL = process.env.BASE_URL; // ref .env file\nconst FUNCTION_SERIES = process.env.FUNCTION_SERIES; // ref .env file\nconst FUNCTION_SEARCH = process.env.FUNCTION_SEARCH; // ref .env file\n\n/**\n * I hate to create multiple action type to udpate single object. ;)\n * I'm using single ACTION type to update reducer.\n */\nconst REDUX_ACTION_TYPE = process.env.REDUX_ACTION_TYPE; // ref .env file.\n\nconst createSearchEndpoint = () => {\n  const url = `${BASE_URL}/query?function=${FUNCTION_SEARCH}&keywords=<query>&apikey=${API_KEY}`;\n  return q => url.replace('<query>', q);\n};\n\nconst searchEndpoint = createSearchEndpoint(); // some type of lazy function\nexport const searchCaller = async (dispatch, query) => {\n  if (!query) {\n    return dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        search: []\n      }\n    });\n  }\n\n  dispatch({\n    type: REDUX_ACTION_TYPE,\n    payload: {\n      loading: true,\n      series: null\n    }\n  });\n  try {\n    const response = await window\n      .fetch(searchEndpoint(query))\n      .then(r => r.json());\n\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        search: normalizeData(response.bestMatches)\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        error: err.message\n      }\n    });\n    console.error(err);\n  } finally {\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        loading: false\n      }\n    });\n  }\n  return null;\n};\n\nconst createSeriesEndpoint = () => {\n  const url = `${BASE_URL}/query?function=${FUNCTION_SERIES}&symbol=<symbol>&interval=<interval>&apikey=${API_KEY}`;\n  return (symbol, interval) =>\n    url.replace('<symbol>', symbol).replace('<interval>', interval || '5min');\n};\n\nconst seriesEndpoint = createSeriesEndpoint();\nexport const seriesCaller = async (dispatch, query) => {\n  if (!query) {\n    return dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        series: null\n      }\n    });\n  }\n\n  dispatch({\n    type: REDUX_ACTION_TYPE,\n    payload: {\n      loading: true\n    }\n  });\n  try {\n    const response = await window\n      .fetch(seriesEndpoint(query.symbol))\n      .then(r => r.json());\n\n    const meta = normalizeObject(response['Meta Data']);\n    const timeSeries = normalizeSeriesData(response['Time Series (5min)']);\n\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        series: {\n          meta: {\n            ...meta,\n            ...query\n          },\n          timeSeries\n        }\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        error: err.message\n      }\n    });\n    console.error(err);\n  } finally {\n    dispatch({\n      type: REDUX_ACTION_TYPE,\n      payload: {\n        loading: false\n      }\n    });\n  }\n  return null;\n};\n","import { searchCaller, seriesCaller } from './api';\n\n/**\n * Register api request in API object\n */\nconst API = {\n  search: searchCaller,\n  series: seriesCaller\n};\n\n/**\n * apiMiddleware\n * Alternative to Redux-Saga; I'm using custom Redux middleware for API\n * @param {{ dipatch: Function, getState: Function }} store\n * @return\n */\nexport const apiMiddleware = store => next => action => {\n  next(action);\n  if (API.hasOwnProperty(action.type)) {\n    API[action.type].apply(null, [store.dispatch, action.args]);\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport stockReducer, { initialState } from './stockReducer';\nimport { apiMiddleware } from './apiMiddleware';\n\nexport default createStore(\n  stockReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(apiMiddleware)\n    // other store enhancers if any\n  )\n);\n","/**\n * I hate to create multiple action type to udpate single object. ;)\n * I'm using single ACTION type to update state.\n */\nconst REDUX_ACTION_TYPE = process.env.REDUX_ACTION_TYPE; // ref .env file.\n\nexport const initialState = {\n  series: null,\n  search: [],\n  error: null,\n  loading: false\n};\n\nexport default (state, action) => {\n  if (action.type === REDUX_ACTION_TYPE && action.payload) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { render } from 'react-dom';\nimport HiverStock from './HiverStock';\nimport store from './utils/store';\nimport './styles.scss';\n\nrender(\n  <Provider store={store}>\n    <HiverStock />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}